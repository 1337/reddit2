// Generated by CoffeeScript 1.7.1
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['angular', 'jquery'], function(angular, $) {
    var getImageUrl, module;
    module = angular.module('Reddit2.controllers', ['Reddit2.services']);
    getImageUrl = function(url) {
      var extension;
      if (__indexOf.call(url, 'imgur') >= 0) {
        if (__indexOf.call(url.slice(-5), '.') < 0) {
          url = url.replace(/imgur/, 'i.imgur') + '.jpg';
        }
        url;
      }
      if (__indexOf.call(url, 'gfycat') >= 0) {
        url;
      }
      extension = url.slice(-3);
      if (extension === 'jpg' || extension === 'gif' || extension === 'png') {
        return url;
      }
    };
    module.controller('HomeController', [
      '$scope', function($scope) {
        return $scope.name = 'Reddit';
      }
    ]);
    module.controller("FeedController", [
      '$scope', 'Reddit', function($scope, Reddit) {
        $scope.reddit = new Reddit();
        $scope.getImageUrl = getImageUrl;
        return console.debug('reddit initialised');
      }
    ]);
    return module.controller("ThreadController", [
      '$scope', '$routeParams', '$sce', 'Thread', function($scope, $routeParams, $sce, Thread) {
        $scope.thread = new Thread($routeParams.permalink);
        $scope.getImageUrl = getImageUrl;
        $scope.safeText = function(text) {
          var el;
          if (text == null) {
            text = "";
          }
          text = text.replace(/<!--\w+-->/, '');
          el = $('<div />').html(text);
          return $sce.trustAsHtml($(el).text());
        };
        return console.debug('reddit initialised');
      }
    ]);
  });

}).call(this);
